;; -*- mode: lisp -*-

(defwidget bar []
  (centerbox :orientation "v" 
    (time)
    (workspaces)
    (sidestuff)
    ))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "v" :space-evenly false :valign "end"
    (metric :label "󰕾"
            :value volume
            :class "volume"
            :onchange "amixer sset Master {}%")
    (metric :label "󱊣"
            :value {EWW_BATTERY.BAT1.capacity}
            :class "battery"
            :onchange "")
  ))

(defwidget workspaces []
  (box :orientation "v"
       :class "workspaces"
       :space-evenly false
       :valign "top"
       :spacing 8
       (button :onclick "hyprctl dispatch split-workspace 1"
               :class {activeworkspace == 1 ? "wsp-active" : "wsp-inactive"} 1)
       (button :onclick "hyprctl dispatch split-workspace 2"
               :class {activeworkspace == 2 ? "wsp-active" : "wsp-inactive"} 2)
       (button :onclick "hyprctl dispatch split-workspace 3"
               :class {activeworkspace == 3 ? "wsp-active" : "wsp-inactive"} 3)
       (button :onclick "hyprctl dispatch split-workspace 4"
               :class {activeworkspace == 4 ? "wsp-active" : "wsp-inactive"} 4)
       (button :onclick "hyprctl dispatch split-workspace 5"
               :class {activeworkspace == 5 ? "wsp-active" : "wsp-inactive"} 5)))

(defwidget metric [label value onchange class]
  (box :orientation "v"
       :class class
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :flipped true 
           :orientation "v" 
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(defpoll volume :interval "1s"
  "amixer sget Master | awk -F '[^0-9]+' '/Left:/{print $3}'")

(defpoll activeworkspace :interval "0.2s"
  "hyprctl activeworkspace | awk '/^workspace ID/ {print $3}'")

(defwidget time []
  (box :class "time" :orientation "v" :space-evenly false :valign "top"
	   (button	:onclick "scripts/popup calendar"	
			    :class "time-hour" hour)
	   (button	:onclick "scripts/popup calendar"	
			    :class "time-min"  min)))

(defpoll hour :interval "10s" "date +%H")
(defpoll min  :interval "10s" "date +%M")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "30px"
                      :height "100%"
                      :anchor "left center")
  (bar))

(defwidget cal []
	(box :class "cal-box" 
		 :orientation "v"
	     (box :class "cal-inner-box"
              :orientation "v" :space-evenly false
              date
	          (calendar :class "cal" 
			            :day calendar_day 
			            :month calendar_month 
			            :year calendar_year))))

(defpoll date :interval "10h" "date '+%b %d, %Y'")
(defpoll calendar_day :interval "10h" "date +%d")
(defpoll calendar_month :interval "10h" "date +%m")
(defpoll calendar_year :interval "10h" "date +%Y")

(defwindow calendar
  :monitor 0
	:geometry (geometry :x "10px" 
						:y "10px" 
						:width "270px" 
						:height "60px")
  (cal))
